Build an ART reinforcement learning task that generates Python functions on demand. Each episode should provide a natural-language requirement plus a function signature (name, args, docstring snippet). Seed with 10â€“20 examples across algorithms and utility helpers. The agent must return a complete Python function body as plain text, adhering to the signature and PEP 8 style. Validate that the output parses and the signature matches; record syntax errors or argument mismatches as numeric metrics and capture details in metadata. Keep the overall structure aligned with the other prompts. The reward function should make sure that the function is valid, signature matches, and the function outputs the same result as the golden implementation.
